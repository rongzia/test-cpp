// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test.proto

#ifndef PROTOBUF_INCLUDED_test_2eproto
#define PROTOBUF_INCLUDED_test_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_test_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_test_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_test_2eproto();
namespace test {
class LengthReply;
class LengthReplyDefaultTypeInternal;
extern LengthReplyDefaultTypeInternal _LengthReply_default_instance_;
class LengthRequest;
class LengthRequestDefaultTypeInternal;
extern LengthRequestDefaultTypeInternal _LengthRequest_default_instance_;
class ReadReply;
class ReadReplyDefaultTypeInternal;
extern ReadReplyDefaultTypeInternal _ReadReply_default_instance_;
class ReadRequest;
class ReadRequestDefaultTypeInternal;
extern ReadRequestDefaultTypeInternal _ReadRequest_default_instance_;
class SeekReply;
class SeekReplyDefaultTypeInternal;
extern SeekReplyDefaultTypeInternal _SeekReply_default_instance_;
class SeekRequest;
class SeekRequestDefaultTypeInternal;
extern SeekRequestDefaultTypeInternal _SeekRequest_default_instance_;
class WriteReply;
class WriteReplyDefaultTypeInternal;
extern WriteReplyDefaultTypeInternal _WriteReply_default_instance_;
class WriteRequest;
class WriteRequestDefaultTypeInternal;
extern WriteRequestDefaultTypeInternal _WriteRequest_default_instance_;
}  // namespace test
namespace google {
namespace protobuf {
template<> ::test::LengthReply* Arena::CreateMaybeMessage<::test::LengthReply>(Arena*);
template<> ::test::LengthRequest* Arena::CreateMaybeMessage<::test::LengthRequest>(Arena*);
template<> ::test::ReadReply* Arena::CreateMaybeMessage<::test::ReadReply>(Arena*);
template<> ::test::ReadRequest* Arena::CreateMaybeMessage<::test::ReadRequest>(Arena*);
template<> ::test::SeekReply* Arena::CreateMaybeMessage<::test::SeekReply>(Arena*);
template<> ::test::SeekRequest* Arena::CreateMaybeMessage<::test::SeekRequest>(Arena*);
template<> ::test::WriteReply* Arena::CreateMaybeMessage<::test::WriteReply>(Arena*);
template<> ::test::WriteRequest* Arena::CreateMaybeMessage<::test::WriteRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace test {

// ===================================================================

class LengthRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.LengthRequest) */ {
 public:
  LengthRequest();
  virtual ~LengthRequest();

  LengthRequest(const LengthRequest& from);

  inline LengthRequest& operator=(const LengthRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LengthRequest(LengthRequest&& from) noexcept
    : LengthRequest() {
    *this = ::std::move(from);
  }

  inline LengthRequest& operator=(LengthRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LengthRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LengthRequest* internal_default_instance() {
    return reinterpret_cast<const LengthRequest*>(
               &_LengthRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LengthRequest* other);
  friend void swap(LengthRequest& a, LengthRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LengthRequest* New() const final {
    return CreateMaybeMessage<LengthRequest>(nullptr);
  }

  LengthRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LengthRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LengthRequest& from);
  void MergeFrom(const LengthRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LengthRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 len = 1;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:test.LengthRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 len_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class LengthReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.LengthReply) */ {
 public:
  LengthReply();
  virtual ~LengthReply();

  LengthReply(const LengthReply& from);

  inline LengthReply& operator=(const LengthReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LengthReply(LengthReply&& from) noexcept
    : LengthReply() {
    *this = ::std::move(from);
  }

  inline LengthReply& operator=(LengthReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LengthReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LengthReply* internal_default_instance() {
    return reinterpret_cast<const LengthReply*>(
               &_LengthReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LengthReply* other);
  friend void swap(LengthReply& a, LengthReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LengthReply* New() const final {
    return CreateMaybeMessage<LengthReply>(nullptr);
  }

  LengthReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LengthReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LengthReply& from);
  void MergeFrom(const LengthReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LengthReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rc = 1;
  void clear_rc();
  static const int kRcFieldNumber = 1;
  ::google::protobuf::int32 rc() const;
  void set_rc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:test.LengthReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 rc_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class SeekRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.SeekRequest) */ {
 public:
  SeekRequest();
  virtual ~SeekRequest();

  SeekRequest(const SeekRequest& from);

  inline SeekRequest& operator=(const SeekRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SeekRequest(SeekRequest&& from) noexcept
    : SeekRequest() {
    *this = ::std::move(from);
  }

  inline SeekRequest& operator=(SeekRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SeekRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SeekRequest* internal_default_instance() {
    return reinterpret_cast<const SeekRequest*>(
               &_SeekRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SeekRequest* other);
  friend void swap(SeekRequest& a, SeekRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SeekRequest* New() const final {
    return CreateMaybeMessage<SeekRequest>(nullptr);
  }

  SeekRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SeekRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SeekRequest& from);
  void MergeFrom(const SeekRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SeekRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 offset = 1;
  void clear_offset();
  static const int kOffsetFieldNumber = 1;
  ::google::protobuf::int64 offset() const;
  void set_offset(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:test.SeekRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 offset_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class SeekReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.SeekReply) */ {
 public:
  SeekReply();
  virtual ~SeekReply();

  SeekReply(const SeekReply& from);

  inline SeekReply& operator=(const SeekReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SeekReply(SeekReply&& from) noexcept
    : SeekReply() {
    *this = ::std::move(from);
  }

  inline SeekReply& operator=(SeekReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const SeekReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SeekReply* internal_default_instance() {
    return reinterpret_cast<const SeekReply*>(
               &_SeekReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SeekReply* other);
  friend void swap(SeekReply& a, SeekReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SeekReply* New() const final {
    return CreateMaybeMessage<SeekReply>(nullptr);
  }

  SeekReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SeekReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SeekReply& from);
  void MergeFrom(const SeekReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SeekReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rc = 1;
  void clear_rc();
  static const int kRcFieldNumber = 1;
  ::google::protobuf::int32 rc() const;
  void set_rc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:test.SeekReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 rc_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class WriteRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.WriteRequest) */ {
 public:
  WriteRequest();
  virtual ~WriteRequest();

  WriteRequest(const WriteRequest& from);

  inline WriteRequest& operator=(const WriteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteRequest(WriteRequest&& from) noexcept
    : WriteRequest() {
    *this = ::std::move(from);
  }

  inline WriteRequest& operator=(WriteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WriteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteRequest* internal_default_instance() {
    return reinterpret_cast<const WriteRequest*>(
               &_WriteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(WriteRequest* other);
  friend void swap(WriteRequest& a, WriteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteRequest* New() const final {
    return CreateMaybeMessage<WriteRequest>(nullptr);
  }

  WriteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteRequest& from);
  void MergeFrom(const WriteRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:test.WriteRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class WriteReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.WriteReply) */ {
 public:
  WriteReply();
  virtual ~WriteReply();

  WriteReply(const WriteReply& from);

  inline WriteReply& operator=(const WriteReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WriteReply(WriteReply&& from) noexcept
    : WriteReply() {
    *this = ::std::move(from);
  }

  inline WriteReply& operator=(WriteReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const WriteReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WriteReply* internal_default_instance() {
    return reinterpret_cast<const WriteReply*>(
               &_WriteReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(WriteReply* other);
  friend void swap(WriteReply& a, WriteReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WriteReply* New() const final {
    return CreateMaybeMessage<WriteReply>(nullptr);
  }

  WriteReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WriteReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WriteReply& from);
  void MergeFrom(const WriteReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WriteReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rc = 1;
  void clear_rc();
  static const int kRcFieldNumber = 1;
  ::google::protobuf::int32 rc() const;
  void set_rc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:test.WriteReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 rc_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class ReadRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.ReadRequest) */ {
 public:
  ReadRequest();
  virtual ~ReadRequest();

  ReadRequest(const ReadRequest& from);

  inline ReadRequest& operator=(const ReadRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadRequest(ReadRequest&& from) noexcept
    : ReadRequest() {
    *this = ::std::move(from);
  }

  inline ReadRequest& operator=(ReadRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadRequest* internal_default_instance() {
    return reinterpret_cast<const ReadRequest*>(
               &_ReadRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(ReadRequest* other);
  friend void swap(ReadRequest& a, ReadRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadRequest* New() const final {
    return CreateMaybeMessage<ReadRequest>(nullptr);
  }

  ReadRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadRequest& from);
  void MergeFrom(const ReadRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:test.ReadRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class ReadReply final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:test.ReadReply) */ {
 public:
  ReadReply();
  virtual ~ReadReply();

  ReadReply(const ReadReply& from);

  inline ReadReply& operator=(const ReadReply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReadReply(ReadReply&& from) noexcept
    : ReadReply() {
    *this = ::std::move(from);
  }

  inline ReadReply& operator=(ReadReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const ReadReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReadReply* internal_default_instance() {
    return reinterpret_cast<const ReadReply*>(
               &_ReadReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(ReadReply* other);
  friend void swap(ReadReply& a, ReadReply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReadReply* New() const final {
    return CreateMaybeMessage<ReadReply>(nullptr);
  }

  ReadReply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReadReply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReadReply& from);
  void MergeFrom(const ReadReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReadReply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // int32 rc = 2;
  void clear_rc();
  static const int kRcFieldNumber = 2;
  ::google::protobuf::int32 rc() const;
  void set_rc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:test.ReadReply)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 rc_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LengthRequest

// int32 len = 1;
inline void LengthRequest::clear_len() {
  len_ = 0;
}
inline ::google::protobuf::int32 LengthRequest::len() const {
  // @@protoc_insertion_point(field_get:test.LengthRequest.len)
  return len_;
}
inline void LengthRequest::set_len(::google::protobuf::int32 value) {
  
  len_ = value;
  // @@protoc_insertion_point(field_set:test.LengthRequest.len)
}

// -------------------------------------------------------------------

// LengthReply

// int32 rc = 1;
inline void LengthReply::clear_rc() {
  rc_ = 0;
}
inline ::google::protobuf::int32 LengthReply::rc() const {
  // @@protoc_insertion_point(field_get:test.LengthReply.rc)
  return rc_;
}
inline void LengthReply::set_rc(::google::protobuf::int32 value) {
  
  rc_ = value;
  // @@protoc_insertion_point(field_set:test.LengthReply.rc)
}

// -------------------------------------------------------------------

// SeekRequest

// int64 offset = 1;
inline void SeekRequest::clear_offset() {
  offset_ = PROTOBUF_LONGLONG(0);
}
inline ::google::protobuf::int64 SeekRequest::offset() const {
  // @@protoc_insertion_point(field_get:test.SeekRequest.offset)
  return offset_;
}
inline void SeekRequest::set_offset(::google::protobuf::int64 value) {
  
  offset_ = value;
  // @@protoc_insertion_point(field_set:test.SeekRequest.offset)
}

// -------------------------------------------------------------------

// SeekReply

// int32 rc = 1;
inline void SeekReply::clear_rc() {
  rc_ = 0;
}
inline ::google::protobuf::int32 SeekReply::rc() const {
  // @@protoc_insertion_point(field_get:test.SeekReply.rc)
  return rc_;
}
inline void SeekReply::set_rc(::google::protobuf::int32 value) {
  
  rc_ = value;
  // @@protoc_insertion_point(field_set:test.SeekReply.rc)
}

// -------------------------------------------------------------------

// WriteRequest

// bytes content = 1;
inline void WriteRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WriteRequest::content() const {
  // @@protoc_insertion_point(field_get:test.WriteRequest.content)
  return content_.GetNoArena();
}
inline void WriteRequest::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:test.WriteRequest.content)
}
#if LANG_CXX11
inline void WriteRequest::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:test.WriteRequest.content)
}
#endif
inline void WriteRequest::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:test.WriteRequest.content)
}
inline void WriteRequest::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:test.WriteRequest.content)
}
inline ::std::string* WriteRequest::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:test.WriteRequest.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WriteRequest::release_content() {
  // @@protoc_insertion_point(field_release:test.WriteRequest.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WriteRequest::set_allocated_content(::std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:test.WriteRequest.content)
}

// -------------------------------------------------------------------

// WriteReply

// int32 rc = 1;
inline void WriteReply::clear_rc() {
  rc_ = 0;
}
inline ::google::protobuf::int32 WriteReply::rc() const {
  // @@protoc_insertion_point(field_get:test.WriteReply.rc)
  return rc_;
}
inline void WriteReply::set_rc(::google::protobuf::int32 value) {
  
  rc_ = value;
  // @@protoc_insertion_point(field_set:test.WriteReply.rc)
}

// -------------------------------------------------------------------

// ReadRequest

// int32 index = 1;
inline void ReadRequest::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 ReadRequest::index() const {
  // @@protoc_insertion_point(field_get:test.ReadRequest.index)
  return index_;
}
inline void ReadRequest::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:test.ReadRequest.index)
}

// -------------------------------------------------------------------

// ReadReply

// bytes content = 1;
inline void ReadReply::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReadReply::content() const {
  // @@protoc_insertion_point(field_get:test.ReadReply.content)
  return content_.GetNoArena();
}
inline void ReadReply::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:test.ReadReply.content)
}
#if LANG_CXX11
inline void ReadReply::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:test.ReadReply.content)
}
#endif
inline void ReadReply::set_content(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:test.ReadReply.content)
}
inline void ReadReply::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:test.ReadReply.content)
}
inline ::std::string* ReadReply::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:test.ReadReply.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReadReply::release_content() {
  // @@protoc_insertion_point(field_release:test.ReadReply.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReadReply::set_allocated_content(::std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:test.ReadReply.content)
}

// int32 rc = 2;
inline void ReadReply::clear_rc() {
  rc_ = 0;
}
inline ::google::protobuf::int32 ReadReply::rc() const {
  // @@protoc_insertion_point(field_get:test.ReadReply.rc)
  return rc_;
}
inline void ReadReply::set_rc(::google::protobuf::int32 value) {
  
  rc_ = value;
  // @@protoc_insertion_point(field_set:test.ReadReply.rc)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace test

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_test_2eproto
